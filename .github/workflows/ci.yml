name: CI

on:
  push:
    branches: [ main ]
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint-type:
    name: Lint & type-check (Python 3.12)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - uses: astral-sh/setup-uv@v2
      - name: Sync dependencies
        run: uv sync --frozen --group dev --extra viz --extra data
      - name: Ruff format (check only)
        run: uv run ruff format --check .
      - name: Ruff lint
        run: uv run ruff check .
      - name: Mypy
        run: uv run mypy spicelab tests

  tests:
    name: Tests (Python ${{ matrix.python-version }})
    runs-on: ubuntu-latest
    needs: lint-type
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - uses: astral-sh/setup-uv@v2
      - name: Install NGSpice (Ubuntu)
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends ngspice
          ngspice -v || true
      - name: Sync dependencies
        run: uv sync --frozen --group dev --extra viz --extra data
      - name: Pytest (unit + integration without engines)
        env:
          PYTHONWARNINGS: default
        run: uv run pytest -m "not engine"

  engine-tests:
    name: Engine integration (NGSpice)
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - uses: astral-sh/setup-uv@v2
      - name: Install NGSpice (Ubuntu)
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends ngspice
          ngspice -v || true
      - name: Sync dependencies
        run: uv sync --frozen --group dev --extra viz --extra data
      - name: Pytest (engine subset)
        env:
          PYTHONWARNINGS: default
        run: uv run pytest -m engine

  generate-demo-assets:
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - uses: astral-sh/setup-uv@v2
      - name: Sync dependencies
        run: uv sync --frozen --group dev --extra viz
      - name: Generate demo assets
        run: |
          uv run python examples/mc_demo_plots.py
          uv run python examples/report_demo.py
      - name: Upload demo assets
        uses: actions/upload-artifact@v4
        with:
          name: demo-doc-assets
          path: docs/assets/examples/
