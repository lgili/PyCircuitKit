name: ci

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install uv
        run: curl -LsSf https://astral.sh/uv/install.sh | sh
      - name: Add uv to PATH
        run: echo "$HOME/.local/bin" >> $GITHUB_PATH
      - name: Sync deps
        run: ~/.local/bin/uv sync --all-extras --dev
      - name: Lint
        run: ~/.local/bin/uv run ruff check .
      - name: Type-check
        run: ~/.local/bin/uv run mypy src tests
      - name: Tests
        run: ~/.local/bin/uv run pytest -q

  docs:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install Python deps for docs
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r docs-requirements.txt
      - name: Install project
        run: python -m pip install -e .
      - name: Ensure PYTHONPATH includes src
        run: echo "${{ github.workspace }}/src" >> $GITHUB_ENV
      - name: Debug Python environment for mkdocstrings
        run: |
          echo "=== python info ==="
          python -V
          python -c "import sys, pprint; pprint.pprint(sys.path)"
          echo "PYTHONPATH: $PYTHONPATH"
          echo "find_spec cat:"
          python -c "import importlib.util as u, pprint; print(u.find_spec('cat'))"
          echo "try import cat and list top-level modules (non-fatal)"
          python - <<'PY'
import importlib, traceback
try:
    m = importlib.import_module('cat')
    print('cat imported:', m)
    print('cat.__file__:', getattr(m, '__file__', None))
    print('available attrs:', [a for a in dir(m) if not a.startswith('_')][:30])
except Exception:
    traceback.print_exc()
PY

      - name: Build MkDocs site (strict)
        run: |
          PYTHONPATH="${{ github.workspace }}/src" python -m mkdocs build --strict
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./site
